zdate(1) -- zsh-powered date formatting
=======================================

## SYNOPSIS

`zdate` <format> [<datestamp>]

## DESCRIPTION

The zdate(1) command formats a date using your system's strftime(3) via the zsh/datetime module, and some custom additions.

## OPTIONS

* <format>:
  specifies the format to display the time in. Accepts either one of the [PRESET FORMATS][], or a full format string like strftime(3), with additions as specified in the [FORMAT][] section.

* [<datestamp>]:
  Unix time to render. If unset, the current date and time are retrieved automatically.

## FORMAT

The format options are identical to your system's strftime(3), with the following additions;

* `%P`:
  is replaced with either "am" or "pm" as appropriate. This token is normalised to render the same across BSD strftime(3) and GNU strftime(3).

* `%i`:
  is replaced with the current Swatch Internet Time (Beats)

## PRESET FORMATS

* `apple`, `a`:
  Apple timestamp format (as used for screen shots) - "2007-01-09 at 9.41.00 am". Equivalent to "%Y-%m-%d at %L.%M.%S %P"
* `beats`, `b`:
  Swatch Internet Time - "@778". Equivalent to "@%i"
* `short`, `s`:
  time only - "9:41 am". Equivalent to "%L:%M %P"
* `medium`, `m`:
  time and day - "Tue 9:41 am". Equivalent to "%a %L:%M %P"
* `long`, `l`:
  date, month, day of month and time - "Tue Jan 9 9:41 am". Equivalent to "%a %b %f %L:%M %P"
* `full`, `f`:
  long date, month, day of month and time - "Tuesday, January 9 2007 9:41:00 am". Equivalent to "%A, %B %f %G %L:%M:%S %P"
* `8601`, `iso`, `i`:
  ISO 8601-style format - "2007-01-09T09:41:00-0800". Equivalent to "%Y-%m-%dT%H:%M:%S%z"

## SEE ALSO

date(1), strftime(3), zshmodules(1)
