# Jessica's tmux configuration

## Guidelines for Configuration ##
# Always use `set` (alias for `set-option`) and `bind` (alias for `bind-key`) in lieu of their longer counterparts
# Where there exists an alias to a flagged option (e.g. `set-window-option` for `set-option -w`), use the flag instead
# All key codes given to the `bind` command should be in single quotes, unless a single quote is required to be in the binding, in which case double quotes should be used

## GENERAL SETTINGS ##

# Count windows like a person (1, 2, 3)
set -g base-index 1
set -w -g pane-base-index 1

# Use screen terminal name for compatibility (?)
set -g default-terminal "screen-256color"
set -g history-limit 10000

# UTF-8 because of course
set -g status-utf8 on

## COLOURS AND LAYOUT ##

# Enable setting terminal title
set -g set-titles on
set -g set-titles-string "[#I] #W"

# Pane border colours
set -g pane-border-fg default
set -g pane-border-bg default
set -g pane-active-border-fg magenta
set -g pane-active-border-bg default

# Command/message line colors
set -g message-fg default
set -g message-bg default

# Selection and mode text colours
set -g mode-fg blue
set -g mode-bg default
set -g mode-attr reverse

# Statusbar colours
set -g status-fg default
set -g status-bg default
set -g status-attr default

# Status bar configuration
set -g status-left "#[bg=magenta,bold]#h#[default]:"
set -g status-right "#(zdate m) "

# Status item configuration
set -g window-status-format "#I #F #W"
set -w -g window-status-fg default
set -w -g window-status-bg default

set -g window-status-current-format "#I #F #W"
set -w -g window-status-current-fg default
set -w -g window-status-current-bg magenta

# Clock Mode Colours
set -w -g clock-mode-colour magenta
set -w -g clock-mode-style 12

## INPUT AND BINDINGS ##

# vim key binding mode
set -w -g mode-keys vi

# Reduce time waited to disambiguate alt and escape key input
set -g -s escape-time 50

# Turn on xterm keys
set -w -g xterm-keys on

# Enable mouse interaction
set -g mouse on

# GNU Screen-style prefix key
unbind 'C-b'
set -g prefix 'C-a'

# Allow C-a a to send C-a to application
bind 'C-a' send-prefix

# Allow reloading source file
bind 'r' source ~/.tmux.conf \; display-message "✔︎ Settings have been reloaded from `.tmux.conf`."

# Toggle status bar
bind 'b' set status

# Switch panes with Tab
unbind 'Tab'
bind 'Tab' select-pane -t :.+

# Create new windows with c
unbind 'c'
bind 'c' new-window -c '#{pane_current_path}'

# Vertical window splits with "
unbind '"'
bind '"' split-window -c '#{pane_current_path}'

# Horizontal window splits with |
unbind '%'
unbind '|'
bind '|' split-window -c '#{pane_current_path}' -h

# Use alt+split buttons to open a new split and immediately run a command
bind 'M-"' command-prompt -p "Open a new horizontal split pane and run" "split-window -c '#{pane_current_path}' 'exec $SHELL -ci \"%%\"'"
bind 'M-|' command-prompt -p "Open a new verical split pane and run" "split-window -h -c '#{pane_current_path}' 'exec $SHELL -ci \"%%\"'"

# Open man page with /
bind '/' command-prompt -p "Show manual for" "split-window -h -c '#{pane_current_path}' 'exec $SHELL -ci \"man %%\"'"

# Cross-platform, SSH-aware clipboard integration
bind 'C-c' run 'tmux save-buffer - | anycopy'
unbind ']'
bind ']' run 'anypaste | tmux load-buffer - \; paste-buffer -d'
bind 'C-v' run 'anypaste | tmux load-buffer - \; paste-buffer -d'

# 'Enter' key copies in copy mode (in 1.8+, where copy-pipe is available)
if '[[ $($(command -v tmux) -V | sed -e "s/.* \([0-9]\)\.\([0-9]\).*/\1/") -gt 1 || $($(command -v tmux) -V | sed -e "s/.* \([0-9]\)\.\([0-9]\).*/\2/") -ge 8 ]]' "bind -t vi-copy 'Enter' copy-pipe 'anycopy'"

# If we're on OS X, load the extra OS X configuration
if '[[ "$(uname -s)" = Darwin ]]' 'source $DOTFILES/platform/darwin/ext/tmux-integration.conf'
